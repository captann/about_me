class Summator:
    def __init__(self):
        self.work = []

    def transform(self, n):
        self.re = n
        return self.re

    def sum(self, N):
        for i in range(1, N + 1):
            self.work.append(self.transform(i))
        return sum(self.work)


class PowerSummator(Summator):
    def __init__(self, b):
        self.bb = b
        self.work = []

    def transform(self, n):
        self.re = n ** self.bb
        return self.re


class SquareSummator(PowerSummator):
    def __init__(self):
        self.work = []
        self.bb = 2


class CubeSummator(PowerSummator):
    def __init__(self):
        self.bb = 3
        self.work = []


